/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GravatarRegistry,
  GravatarRegistryInterface,
} from "../GravatarRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "imageUrl",
        type: "string",
      },
    ],
    name: "NewGravatar",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "imageUrl",
        type: "string",
      },
    ],
    name: "UpdatedGravatar",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_displayName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_imageUrl",
        type: "string",
      },
    ],
    name: "createGravatar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getGravatar",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gravatarToOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gravatars",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageUrl",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerToGravatar",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setMythicalGravatar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_imageUrl",
        type: "string",
      },
    ],
    name: "updateGravatarImage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_displayName",
        type: "string",
      },
    ],
    name: "updateGravatarName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506115c4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c8063a5ac36341161005b578063a5ac363414610113578063b18588fb14610143578063cdb3344a1461015f578063d5ce24ed1461017b57610087565b806281d6e51461008c5780631d4f2c6d146100a8578063359c1f72146100b257806388d0d391146100e3575b600080fd5b6100a660048036038101906100a19190610f62565b6101ad565b005b6100b061040b565b005b6100cc60048036038101906100c79190610f39565b6105a3565b6040516100da929190611192565b60405180910390f35b6100fd60048036038101906100f8919061100f565b6107a2565b60405161010a9190611132565b60405180910390f35b61012d60048036038101906101289190610f39565b6107d5565b60405161013a91906111e9565b60405180910390f35b61015d60048036038101906101589190610f62565b6107ed565b005b61017960048036038101906101749190610fa3565b610a4b565b005b6101956004803603810190610190919061100f565b610c9a565b6040516101a49392919061114d565b60405180910390f35b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156101fa57600080fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481548110610273577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102dc57600080fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050816000828154811061035b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060030201600201908051906020019061037f929190610e04565b507f76571b7a897a1509c641587568218a290018fbdc8b9a724f17b77ff0eec22c0c8133600084815481106103dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060030201600101856040516103ff94939291906112aa565b60405180910390a15050565b738d3e809fbd258083a5ba004a527159da535c8aba73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045757600080fd5b60006040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016040518060400160405280600181526020017f200000000000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600181526020017f2000000000000000000000000000000000000000000000000000000000000000815250815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610581929190610e04565b50604082015181600201908051906020019061059e929190610e04565b505050565b6060806000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008181548110610624577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600302016001016000828154811061066f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160020181805461068c90611436565b80601f01602080910402602001604051908101604052809291908181526020018280546106b890611436565b80156107055780601f106106da57610100808354040283529160200191610705565b820191906000526020600020905b8154815290600101906020018083116106e857829003601f168201915b5050505050915080805461071890611436565b80601f016020809104026020016040519081016040528092919081815260200182805461074490611436565b80156107915780601f1061076657610100808354040283529160200191610791565b820191906000526020600020905b81548152906001019060200180831161077457829003601f168201915b505050505090509250925050915091565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561083a57600080fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815481106108b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461091c57600080fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050816000828154811061099b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160010190805190602001906109bf929190610e04565b507f76571b7a897a1509c641587568218a290018fbdc8b9a724f17b77ff0eec22c0c81338460008581548110610a1e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060030201600201604051610a3f9493929190611257565b60405180910390a15050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610acd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac4906111c9565b60405180910390fd5b600060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610b8c929190610e04565b506040820151816002019080519060200190610ba9929190610e04565b50505060006001600080549050610bc09190611384565b9050336001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9ab3aefb2ba6dc12910ac1bce4692cf5c3c0d06cff16327c64a3ef78228b130b81338585604051610c8d9493929190611204565b60405180910390a1505050565b60008181548110610caa57600080fd5b90600052602060002090600302016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610cf390611436565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1f90611436565b8015610d6c5780601f10610d4157610100808354040283529160200191610d6c565b820191906000526020600020905b815481529060010190602001808311610d4f57829003601f168201915b505050505090806002018054610d8190611436565b80601f0160208091040260200160405190810160405280929190818152602001828054610dad90611436565b8015610dfa5780601f10610dcf57610100808354040283529160200191610dfa565b820191906000526020600020905b815481529060010190602001808311610ddd57829003601f168201915b5050505050905083565b828054610e1090611436565b90600052602060002090601f016020900481019282610e325760008555610e79565b82601f10610e4b57805160ff1916838001178555610e79565b82800160010185558215610e79579182015b82811115610e78578251825591602001919060010190610e5d565b5b509050610e869190610e8a565b5090565b5b80821115610ea3576000816000905550600101610e8b565b5090565b6000610eba610eb584611322565b6112fd565b905082815260208101848484011115610ed257600080fd5b610edd8482856113f4565b509392505050565b600081359050610ef481611560565b92915050565b600082601f830112610f0b57600080fd5b8135610f1b848260208601610ea7565b91505092915050565b600081359050610f3381611577565b92915050565b600060208284031215610f4b57600080fd5b6000610f5984828501610ee5565b91505092915050565b600060208284031215610f7457600080fd5b600082013567ffffffffffffffff811115610f8e57600080fd5b610f9a84828501610efa565b91505092915050565b60008060408385031215610fb657600080fd5b600083013567ffffffffffffffff811115610fd057600080fd5b610fdc85828601610efa565b925050602083013567ffffffffffffffff811115610ff957600080fd5b61100585828601610efa565b9150509250929050565b60006020828403121561102157600080fd5b600061102f84828501610f24565b91505092915050565b611041816113b8565b82525050565b600061105282611368565b61105c8185611373565b935061106c818560208601611403565b61107581611526565b840191505092915050565b6000815461108d81611436565b6110978186611373565b945060018216600081146110b257600181146110c4576110f7565b60ff19831686526020860193506110f7565b6110cd85611353565b60005b838110156110ef578154818901526001820191506020810190506110d0565b808801955050505b50505092915050565b600061110d600f83611373565b915061111882611537565b602082019050919050565b61112c816113ea565b82525050565b60006020820190506111476000830184611038565b92915050565b60006060820190506111626000830186611038565b81810360208301526111748185611047565b905081810360408301526111888184611047565b9050949350505050565b600060408201905081810360008301526111ac8185611047565b905081810360208301526111c08184611047565b90509392505050565b600060208201905081810360008301526111e281611100565b9050919050565b60006020820190506111fe6000830184611123565b92915050565b60006080820190506112196000830187611123565b6112266020830186611038565b81810360408301526112388185611047565b9050818103606083015261124c8184611047565b905095945050505050565b600060808201905061126c6000830187611123565b6112796020830186611038565b818103604083015261128b8185611047565b9050818103606083015261129f8184611080565b905095945050505050565b60006080820190506112bf6000830187611123565b6112cc6020830186611038565b81810360408301526112de8185611080565b905081810360608301526112f28184611047565b905095945050505050565b6000611307611318565b90506113138282611468565b919050565b6000604051905090565b600067ffffffffffffffff82111561133d5761133c6114f7565b5b61134682611526565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600061138f826113ea565b915061139a836113ea565b9250828210156113ad576113ac611499565b5b828203905092915050565b60006113c3826113ca565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611421578082015181840152602081019050611406565b83811115611430576000848401525b50505050565b6000600282049050600182168061144e57607f821691505b60208210811415611462576114616114c8565b5b50919050565b61147182611526565b810181811067ffffffffffffffff821117156114905761148f6114f7565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f416c726561647920437265617465640000000000000000000000000000000000600082015250565b611569816113b8565b811461157457600080fd5b50565b611580816113ea565b811461158b57600080fd5b5056fea264697066735822122038af6858a19585cfadef67b946654ea18e4c59ca803038947916185a0c3ef45064736f6c63430008040033";

type GravatarRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GravatarRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GravatarRegistry__factory extends ContractFactory {
  constructor(...args: GravatarRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GravatarRegistry> {
    return super.deploy(overrides || {}) as Promise<GravatarRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GravatarRegistry {
    return super.attach(address) as GravatarRegistry;
  }
  connect(signer: Signer): GravatarRegistry__factory {
    return super.connect(signer) as GravatarRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GravatarRegistryInterface {
    return new utils.Interface(_abi) as GravatarRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GravatarRegistry {
    return new Contract(address, _abi, signerOrProvider) as GravatarRegistry;
  }
}
